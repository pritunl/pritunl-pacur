targets=(
    "archlinux"
    "amazonlinux-2"
    "centos-7"
    "centos-8"
    "debian-stretch"
    "debian-buster"
    "debian-bullseye"
    "fedora-33"
    "fedora-34"
    "oraclelinux-7"
    "oraclelinux-8"
    "ubuntu-xenial"
    "ubuntu-bionic"
    "ubuntu-focal"
    "ubuntu-hirsute"
)
pkgname="pritunl-endpoint"
pkgver="1.0.1091.35"
pkgrel="1"
pkgdesc="Pritunl Endpoint"
pkgdesclong=(
    "Pritunl Endpoint"
)
maintainer="Pritunl <contact@pritunl.com>"
arch="amd64"
license=("custom")
section="utils"
priority="optional"
url="https://github.com/pritunl/${pkgname}"
depends:pacman=(
    "openssl"
)
depends:yum=(
    "openssl"
)
depends:apt=(
    "openssl"
)

makedepends:pacman=(
    "git"
)
makedepends:yum=(
    "git"
)
makedepends:apt=(
    "git"
)
provides=("${pkgname}")
conflicts=(
    "${pkgname}"
)
sources=(
    "${url}/archive/${pkgver}.tar.gz"
    "pritunl-endpoint.json"
    "pritunl-endpoint.service"
)
hashsums=(
    "2dd11dd3d4b30a55c3212b11a8917da58cea2916a397d6162c79ab5c5be9a2de"
    "d914176fd50bd7f565700006a31aa97b79d3ad17cee20c8e5ff2061d5cb74817"
    "4410bfb2e08a738ca37e3a9790c53342213ec87f44e79aa055d844d67f0acb26"
)
backup=(
    "etc/${pkgname}.json"
    "var/log/${pkgname}.log"
    "var/log/${pkgname}.log.1"
)

build() {
    mkdir -p /go/src/github.com/pritunl
    mv "${srcdir}/${pkgname}-${pkgver}" /go/src/github.com/pritunl/${pkgname}
    cd /go/src/github.com/pritunl/${pkgname}
    go get
    go install
}

package() {
    mkdir -p ${pkgdir}/usr/bin
    cp /go/bin/${pkgname} ${pkgdir}/usr/bin/${pkgname}
    chmod 755 ${pkgdir}/usr/bin/${pkgname}

    mkdir -p ${pkgdir}/etc
    cp ${srcdir}/${pkgname}.json ${pkgdir}/etc/${pkgname}.json

    mkdir -p ${pkgdir}/etc/systemd/system
    cp ${srcdir}/${pkgname}.service ${pkgdir}/etc/systemd/system/${pkgname}.service

    touch ${pkgdir}/etc/${pkgname}.json
    chmod 600 ${pkgdir}/etc/${pkgname}.json
    mkdir -p ${pkgdir}/var/log
    touch ${pkgdir}/var/log/${pkgname}.log
    touch ${pkgdir}/var/log/${pkgname}.log.1
}

postinst() {
    systemctl daemon-reload &> /dev/null || true
    systemctl restart pritunl-endpoint &> /dev/null || true
}

postrm() {
    systemctl daemon-reload &> /dev/null || true
}
