targets=(
    "almalinux-8"
    "almalinux-9"
    "amazonlinux-2"
    "amazonlinux-2023"
    "oraclelinux-7"
    "oraclelinux-8"
    "oraclelinux-9"
)
pkgname="pritunl-openvpn"
pkgver="2.6.15"
pkgrel="1"
pkgdesc="A full-featured SSL VPN solution"
pkgdesclong=(
    "An easy-to-use, robust and highly configurable VPN"
)
maintainer="Pritunl <contact@pritunl.com>"
arch="amd64"
license=("GPLv2")
section="utils"
priority="optional"
url="https://community.openvpn.net/"
depends:yum=(
    "net-tools"
    "openssl"
    "pkcs11-helper"
)
makedepends:yum=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pkcs11-helper-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python3-docutils"
    "perl-macros"
)
makedepends:amazonlinux-2=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pkcs11-helper-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python-docutils"
    "perl-macros"
)
makedepends:amazonlinux-2023=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python-docutils"
    "perl-macros"
)
makedepends:oraclelinux-7=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pkcs11-helper-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python-docutils"
    "perl-macros"
)
makedepends:almalinux-9=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python3-docutils"
    "perl-macros"
)
makedepends:oraclelinux-9=(
    "gnupg2"
    "gcc"
    "automake"
    "autoconf"
    "autoconf-archive"
    "libtool"
    "gettext"
    "lzo-devel"
    "lz4-devel"
    "libnl3-devel"
    "libcap-ng-devel"
    "make"
    "openssl-devel"
    "pam-devel"
    "libselinux-devel"
    "libcmocka-devel"
    "systemd"
    "systemd-devel"
    "python3-docutils"
    "perl-macros"
)
provides=(
    "${pkgname}"
    "openvpn"
)
conflicts=(
    "${pkgname}"
    "openvpn"
)
sources=(
    "https://swupdate.openvpn.org/community/releases/openvpn-${pkgver}.tar.gz"
)
hashsums=(
    "e35513ee15995e3c71adfd8891b9f33522896c70b3baa2ed9a23c7a42c4d7bde"
)

build:amazonlinux-2() {
    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push \
        --disable-dco
    make
}

build:amazonlinux-2023() {
    tee /etc/yum.repos.d/pritunl.repo << EOF
[pritunl]
name=Pritunl Repository
baseurl=https://repo.pritunl.com/stable/yum/amazonlinux/2023/
gpgcheck=1
enabled=1
gpgkey=https://raw.githubusercontent.com/pritunl/pgp/master/pritunl_repo_pub.asc
EOF

    yum -y install pkcs11-helper

    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push \
        --disable-dco
    make
}

build:oraclelinux-7() {
    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push \
        --disable-dco
    make
}

build:almalinux-9() {
    tee /etc/yum.repos.d/pritunl.repo << EOF
[pritunl]
name=Pritunl Repository
baseurl=https://repo.pritunl.com/stable/yum/almalinux/9/
gpgcheck=1
enabled=1
gpgkey=https://raw.githubusercontent.com/pritunl/pgp/master/pritunl_repo_pub.asc
EOF

    dnf -y install pkcs11-helper

    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push \
        --disable-dco
    make
}

build:oraclelinux-9() {
    tee /etc/yum.repos.d/pritunl.repo << EOF
[pritunl]
name=Pritunl Repository
baseurl=https://repo.pritunl.com/stable/yum/oraclelinux/9/
gpgcheck=1
enabled=1
gpgkey=https://raw.githubusercontent.com/pritunl/pgp/master/pritunl_repo_pub.asc
EOF

    dnf -y install pkcs11-helper

    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push \
        --disable-dco
    make
}

build() {
    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    ./configure \
        --prefix=/usr \
        --sbindir=/usr/bin \
        --enable-silent-rules \
        --with-crypto-library=openssl \
        --enable-pkcs11 \
        --enable-selinux \
        --enable-systemd \
        --enable-x509-alt-username \
        --enable-async-push
    make
}

package() {
    cd "${srcdir}/openvpn-${pkgver}"
    gcc_major=$(gcc -dumpversion | cut -d. -f1)
    base_cflags="-fstack-protector-strong -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -Werror=format-security -mtune=generic -grecord-gcc-switches"
    base_ldflags="-pie -Wl,-z,relro,-z,now -Wl,-z,noexecstack"
    if [ "$gcc_major" -ge 7 ]; then
        gcc7_flags="-fno-semantic-interposition"
        cflags="$base_cflags $gcc7_flags"
        ldflags="$base_ldflags -fno-semantic-interposition"
    else
        cflags="$base_cflags"
        ldflags="$base_ldflags"
    fi
    if [ "$gcc_major" -ge 8 ]; then
        gcc8_flags="-fstack-clash-protection -fcf-protection"
        cflags="$cflags $gcc8_flags"
    fi
    if [ "$gcc_major" -ge 11 ]; then
        arch_flags="-march=x86-64-v2"
        cflags="$cflags $arch_flags"
    fi
    export CFLAGS_NODIST="$cflags"
    export LDFLAGS_NODIST="$ldflags"

    echo "####################################################################"
    echo "CFLAGS_NODIST: $CFLAGS_NODIST"
    echo "LDFLAGS_NODIST: $LDFLAGS_NODIST"
    echo "####################################################################"

    make DESTDIR=${pkgdir} install
    install -d -m0755 "${pkgdir}/usr/share/licenses/openvpn/"
    ln -sf "/usr/share/doc/openvpn/COPYING" "${pkgdir}/usr/share/licenses/openvpn/"
    ln -sf "/usr/share/doc/openvpn/COPYRIGHT.GPL}" "${pkgdir}/usr/share/licenses/openvpn/"
}
