targets=(
    "archlinux"
    "amazonlinux-2"
    "centos-7"
    "debian-stretch"
    "debian-buster"
    "debian-bullseye"
    "fedora-34"
    "fedora-35"
    "oraclelinux-7"
    "oraclelinux-8"
    "ubuntu-xenial"
    "ubuntu-bionic"
    "ubuntu-focal"
    "ubuntu-impish"
)
pkgname="pritunl-client"
pkgver="1.0.2079.9"
pkgrel="1"
pkgdesc="Pritunl OpenVPN CLI Client"
pkgdesclong=(
    "Free and open source cross platform OpenVPN client"
)
maintainer="Pritunl <contact@pritunl.com>"
arch="amd64"
license=("custom")
section="utils"
priority="optional"
url="https://github.com/pritunl/pritunl-client-electron"
depends:pacman=(
    "net-tools"
    "iproute2"
    "openvpn"
)
depends:yum=(
    "net-tools"
    "iptables"
    "openvpn"
)
depends:apt=(
    "net-tools"
    "iptables"
    "openvpn"
    "resolvconf"
)
makedepends:pacman=(
    "net-tools"
    "iproute2"
    "openvpn"
    "npm"
    "unzip"
)
makedepends:yum=(
    "unzip"
)
makedepends:apt=(
    "unzip"
)
provides=("${pkgname}")
conflicts=(
    "${pkgname}"
    "pritunl-client-gtk"
    "pritunl-client-electron"
)
sources=(
    "${url}/archive/refs/tags/${pkgver}.tar.gz"
)
hashsums=(
    "341992f60f38e5a6159422e0a0d898590b56ad1f663918351322981d02ad9fa2"
)
backup=(
    "var/log/pritunl-client.log"
    "var/log/pritunl-client.log.1"
)

build:pacman() {
    mkdir -p /go/src/github.com/pritunl
    mv "${srcdir}/pritunl-client-electron-${pkgver}" /go/src/github.com/pritunl/pritunl-client-electron

    cd /go/src/github.com/pritunl/pritunl-client-electron/service
    go get -u
    go build -v

    cd /go/src/github.com/pritunl/pritunl-client-electron/cli
    go get -u
    go build -v
}
build:yum() {
    mkdir -p /go/src/github.com/pritunl
    mv "${srcdir}/pritunl-client-electron-${pkgver}" /go/src/github.com/pritunl/pritunl-client-electron

    cd /go/src/github.com/pritunl/pritunl-client-electron/service
    go get -u
    go build -v

    cd /go/src/github.com/pritunl/pritunl-client-electron/cli
    go get -u
    go build -v
}
build:apt() {
    mkdir -p /go/src/github.com/pritunl
    mv "${srcdir}/pritunl-client-electron-${pkgver}" /go/src/github.com/pritunl/pritunl-client-electron

    cd /go/src/github.com/pritunl/pritunl-client-electron/service
    go get -u
    go build -v

    cd /go/src/github.com/pritunl/pritunl-client-electron/cli
    go get -u
    go build -v
}

package:pacman() {
    cd /go/src/github.com/pritunl/pritunl-client-electron

    mkdir -p ${pkgdir}/etc/systemd/system
    cp resources_linux/pritunl-client.service ${pkgdir}/etc/systemd/system/pritunl-client.service

    mkdir -p ${pkgdir}/usr/bin
    cp /go/bin/service ${pkgdir}/usr/bin/pritunl-client-service
    cp /go/bin/cli ${pkgdir}/usr/bin/pritunl-client

    mkdir -p ${pkgdir}/var/log
    touch ${pkgdir}/var/log/pritunl-client.log
    touch ${pkgdir}/var/log/pritunl-client.log.1
}
package:yum() {
    cd /go/src/github.com/pritunl/pritunl-client-electron

    mkdir -p ${pkgdir}/etc/systemd/system
    cp resources_linux/pritunl-client.service ${pkgdir}/etc/systemd/system/pritunl-client.service

    mkdir -p ${pkgdir}/usr/bin
    cp /go/bin/service ${pkgdir}/usr/bin/pritunl-client-service
    cp /go/bin/cli ${pkgdir}/usr/bin/pritunl-client

    mkdir -p ${pkgdir}/var/log
    touch ${pkgdir}/var/log/pritunl-client.log
    touch ${pkgdir}/var/log/pritunl-client.log.1
}
package:apt() {
    cd /go/src/github.com/pritunl/pritunl-client-electron

    mkdir -p ${pkgdir}/etc/systemd/system
    cp resources_linux/pritunl-client.service ${pkgdir}/etc/systemd/system/pritunl-client.service

    mkdir -p ${pkgdir}/usr/bin
    cp /go/bin/service ${pkgdir}/usr/bin/pritunl-client-service
    cp /go/bin/cli ${pkgdir}/usr/bin/pritunl-client

    mkdir -p ${pkgdir}/var/log
    touch ${pkgdir}/var/log/pritunl-client.log
    touch ${pkgdir}/var/log/pritunl-client.log.1
}

postinst() {
    systemctl daemon-reload &> /dev/null || true
    systemctl restart pritunl-client &> /dev/null || true
    systemctl enable pritunl-client &> /dev/null || true
}

prerm() {
    systemctl daemon-reload &> /dev/null || true
    systemctl stop pritunl-client &> /dev/null || true
    systemctl disable pritunl-client &> /dev/null || true
}

postrm() {
    systemctl daemon-reload &> /dev/null || true
}
